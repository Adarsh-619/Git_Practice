# This is a basic workflow to help you get started with Actions

name: Organised Github Actions

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: ["beta"]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-on-windows:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Step 1 - Log the pre-build disk space
        run: ls

      - name: Step 2 - Checkout the alpha Github branch
        uses: actions/checkout@v4
        with:
          ref: beta

      - name: Step 3 - Set-up Jdk 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Step 4 - Build your Jakarta web app with maven
        run: echo "mvn -B package --file pom.xml"

      - name: Step 5 - Check Windows Execution policy
        run: |
          echo "Here is the Windows Execution Policy"
          Get-ExecutionPolicy
    
      - name: Step 6 - List Windows Environment Variables
        run: env

  build-on-linux:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Step 1 - Log the pre-build disk space
        run: df

      - name: Step 2 - Checkout the alpha Github branch
        uses: actions/checkout@v4
        with:
          ref: alpha

      - name: Step 3 - Set-up Jdk 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Step 4 - Build your Jakarta web app with maven
        run: echo mvn -B package --file pom.xml

      - name: Step 5 - Build the native Android App
        run: |
          echo Here is the Android Root
          echo $ANDROID_SDK_ROOT

      - name: Step 6 - Run the Selenium Tests
        run: |
          echo The Selenium Jar Path
          echo $SELENIUM_JAR_PATH
      
      - name: Step 7 - Log Build tools version
        run: |
          mvn --version
          gradle --version
          ant -version
      
      - name: Step 8 - Log post-build disk space
        run: df

